import React from 'react';

export interface Vulnerability {
  type: string;
  severity: 'high' | 'medium' | 'low';
  description: string;
  details?: string;
}

interface VulnerabilityItemProps {
  vulnerability: Vulnerability;
}

const VulnerabilityItem: React.FC<VulnerabilityItemProps> = ({ vulnerability }) => {
  const getSeverityColor = (severity: string) => {
    switch (severity) {
      case 'high':
        return 'text-red-600 bg-red-50 border-red-200';
      case 'medium':
        return 'text-amber-600 bg-amber-50 border-amber-200';
      case 'low':
        return 'text-blue-600 bg-blue-50 border-blue-200';
      default:
        return 'text-gray-600 bg-gray-50 border-gray-200';
    }
  };

  return (
    <div className="bg-white/70 rounded-xl border border-indigo-100 p-5 shadow-sm">
      <div className="flex flex-col md:flex-row md:justify-between md:items-start gap-4">
        <div>
          <div className="flex items-center gap-3 mb-2">
            <span className={`px-3 py-1 rounded-full text-xs border ${getSeverityColor(vulnerability.severity)}`}>
              {vulnerability.severity.toUpperCase()}
            </span>
            <h4 className="text-lg font-medium text-indigo-900">{vulnerability.type}</h4>
          </div>
          <p className="text-indigo-800 mb-3">{vulnerability.description}</p>
          {vulnerability.details && (
            <div className="mt-4 bg-indigo-50/50 rounded-lg p-3 border border-indigo-100">
              <p className="text-sm text-indigo-700 whitespace-pre-line">{vulnerability.details}</p>
            </div>
          )}
        </div>
      </div>
    </div>
  );
};

export default VulnerabilityItem;